{"version":3,"file":"static/js/713.fdb717b7.chunk.js","mappings":"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","sources":["UI/Progress/index.jsx","components/AppointmentsCalendar/TimeSlot/index.jsx","components/AppointmentsCalendar/DailyToolbar/index.jsx","components/AppointmentsCalendar/WeeklyNavigation/index.jsx","components/AppointmentsCalendar/WeekSelector/index.jsx","components/AppointmentsCalendar/MonthlyNavigation/index.jsx","components/AppointmentsCalendar/MonthSelector/index.jsx","db/calendar_appointments.js","components/AppointmentsCalendar/index.jsx","components/PeriodNav/index.jsx","components/Todos/AddForm/index.jsx","components/Todos/AddForm/style.js","components/Todos/DnDLayout/style.js","components/Todos/Todo/list.js","components/Todos/Todo/planner.js","UI/Checkbox/index.jsx","components/Todos/Todo/index.jsx","components/Todos/DnDLayout/index.jsx","components/Todos/TodosLegend/index.jsx","constants/options.js","widgets/TasksList/index.jsx","pages/DashboardC.jsx","widgets/ConfirmedDiagnoses/List/style.js"],"sourcesContent":["// styling\nimport {dark, colors} from '@styles/vars';\n\n// components\nimport LinearProgress from '@mui/material/LinearProgress';\n\n// hooks\nimport {useTheme} from 'styled-components';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Progress = ({color = colors.blue, value, style = {}}) => {\n    const {theme} = useTheme();\n\n    return <LinearProgress className=\"progressbar\"\n                           variant=\"determinate\"\n                           aria-label={value}\n                           value={value}\n                           sx={{\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\n                               height: 6,\n                               borderRadius: 2,\n                               ...style,\n\n                               '& .MuiLinearProgress-bar': {\n                                   backgroundColor: color,\n                                   borderRadius: 2,\n                               }\n                           }}/>\n}\n\nProgress.propTypes = {\n    color: PropTypes.string,\n    value: PropTypes.number.isRequired,\n    style: PropTypes.object,\n}\n\nexport default Progress;","// utils\nimport {cloneElement} from 'react';\nimport moment from 'moment';\nimport {addZero} from '@utils/numbers';\n\nconst TimeSlot = (props, step, day, isRender) => {\n    const differenceMs = moment() - moment(props.value)\n    const isCurrentTimeSlot = (differenceMs / (60 * 1000)) > 0 && (differenceMs / (60 * 1000)) < step;\n    let hours = new Date().getHours(),\n        minutes = new Date().getMinutes();\n    const currentTime = hours + ':' + addZero(minutes);\n\n    let timeIndicator = {}\n    let addStyle = {}\n\n    function calculateIndicatorPosition() {\n        let minutesFromProps = props.value.getMinutes(),\n            indicatorPosition;\n        switch (minutesFromProps) {\n            default:\n            case 0:\n                indicatorPosition = minutesFromProps + minutes;\n                break;\n            case 30:\n                indicatorPosition = Math.abs(minutesFromProps - minutes);\n                break;\n        }\n        return indicatorPosition;\n    }\n\n    if (isCurrentTimeSlot && isRender) {\n        timeIndicator.className = 'current-time'\n        timeIndicator.children =\n            <span className=\"time-indicator\" style={{top: `${100 / step * calculateIndicatorPosition()}%`}}>\n                <span className=\"label\">{currentTime}</span>\n            </span>\n    }\n\n    return cloneElement(\n        props.children,\n        {\n            style: {...addStyle},\n            'data-time': moment(props.value).format('HH:mm'),\n            ...timeIndicator\n        })\n}\n\nexport default TimeSlot;","const DailyToolbar = ({label}) => {\n    return (\n        <>\n            <h2>{label}</h2>\n        </>\n    )\n}\n\nexport default DailyToolbar;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst WeeklyNavigation = ({date, setter}) => {\n    const calendarWeek = moment(date).week();\n    const currentWeek = moment().week();\n\n    const handleWeekNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'week').startOf('week').toDate());\n        } else {\n            setter(moment(date).add(1, 'week').startOf('week').toDate());\n        }\n    }\n\n    const firstWeek = moment(date).startOf('year').week(),\n        lastWeek = moment(date).endOf('year').week();\n\n    let label;\n    if (currentWeek === calendarWeek) label = 'This week';\n    else if (currentWeek + 1 === calendarWeek) label = 'Next week';\n    else if (currentWeek - 1 === calendarWeek) label = 'Last week';\n    else label = 'Week ' + calendarWeek;\n\n    return (\n        <Navigator handler={handleWeekNavigation}\n                   text={label}\n                   prevDisabled={calendarWeek === firstWeek}\n                   nextDisabled={calendarWeek === lastWeek}/>\n    )\n}\n\nexport default WeeklyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getWeekArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst WeekSelector = ({date, setter}) =>{\n    const options = getWeekArray().map((item, i) => {\n        return {\n            value: i,\n            label: `${item.startLong} - ${item.endLong}`,\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).week() - 1]);\n\n    const handleWeekChange = e => {\n        setSelected(e);\n        setter(moment(date).week(e.value + 1).startOf('week').toDate());\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleWeekChange}/>\n}\n\nexport default WeekSelector;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst MonthlyNavigation = ({date, setter}) => {\n    const calendarMonth = moment(date).month();\n    const currentMonth = moment().month();\n\n    const handleMonthNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'month').toDate());\n        } else {\n            setter(moment(date).add(1, 'month').toDate());\n        }\n    }\n\n    let label;\n    if (currentMonth === calendarMonth) label = 'This month';\n    else if (currentMonth + 1 === calendarMonth) label = 'Next month';\n    else if (currentMonth - 1 === calendarMonth) label = 'Last month';\n    else label = `${moment(date).format('MMMM')}`;\n\n    return (\n        <Navigator handler={handleMonthNavigation}\n                   text={label}\n                   prevDisabled={calendarMonth === 0}\n                   nextDisabled={calendarMonth === 11}/>\n    )\n}\n\nexport default MonthlyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getMonthArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst MonthSelector = ({date, setter}) => {\n    const options = getMonthArray().map(item => {\n        return {\n            value: item.month,\n            label: item.formatted\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).month()]);\n\n    const handleMonthChange = e => {\n        setSelected(e);\n        const month =  moment(e.value).month();\n        setter(moment(date).set({month: month, date: 1}));\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleMonthChange}/>\n}\n\nexport default MonthSelector;","import moment from 'moment';\n\nexport const disabled = [\n    {\n        start: moment().set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n\n];\n\nexport const events = {\n    doctor: [\n        {\n            name: 'MRI',\n            start: moment().set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n\n    ],\n    patient: {\n        general: [\n            {\n                name: '3:00 PM  Patient Nagar',\n                start: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n                end: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            }\n\n\n        ],\n        disabled: disabled\n    }\n}","// styles\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// styled components\nimport { Container, Header, StyledCalendar, Footer } from './style';\nimport { Container as Tabs, Item, Button } from '@ui/TabNav/style';\n\n// components\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport Event from '@components/AppointmentsCalendar/Event';\nimport TimeSlot from '@components/AppointmentsCalendar/TimeSlot';\nimport DailyToolbar from '@components/AppointmentsCalendar/DailyToolbar';\nimport DailyNavigation from '@components/AppointmentsCalendar/DailyNavigation';\nimport WeeklyNavigation from '@components/AppointmentsCalendar/WeeklyNavigation';\nimport WeekSelector from '@components/AppointmentsCalendar/WeekSelector';\nimport MonthlyNavigation from '@components/AppointmentsCalendar/MonthlyNavigation';\nimport MonthSelector from '@components/AppointmentsCalendar/MonthSelector';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport DoctorPopup from '@components/AppointmentsCalendar/DoctorPopup';\n\n// utils\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { colorTypes } from '@constants/colors';\nimport { doctorsOptions } from '@constants/options';\n\n// hooks\nimport { useState, useRef, useEffect } from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport { events, disabled } from '@db/calendar_appointments';\nimport CustomSelect from '@ui/Select';\nimport { GetAppointmtentREwie } from '@components/Api/AllApi';\n\nconst AppointmentsCalendar = ({ viewChangeHandler, current, type }) => {\n    const width = useWindowSize().width;\n    const localizer = momentLocalizer(moment);\n\n    const footerRef = useRef(null);\n    const headerRef = useRef(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        setHeight(headerRef.current.offsetHeight + footerRef.current.offsetHeight);\n    }, [headerRef, footerRef]);\n\n    const options = doctorsOptions();\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    const [post, setPost] = useState(false)\n\n    useEffect(() => {\n\n        const AppShed = GetAppointmtentREwie();\n        if (AppShed) {\n            AppShed.then((data) => {\n                console.log(data, \"App ShedulerA\")\n                setPost(data?.result, \"App ShedulerA\")\n            })\n        }\n\n\n    }, [])\n\n\n    const getDayFormat = () => {\n        switch (true) {\n            case width < 768:\n                return 'D';\n            case width < 1600:\n                return 'ddd, D';\n            default:\n                return 'dddd D MMMM';\n        }\n    }\n\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\n    const views = ['month', 'week', 'day'];\n    const Navigation = () => {\n        return (\n            <Tabs className=\"tabs\">\n                {\n                    views.map(view => {\n                        return (\n                            <Item key={view}>\n                                <Button className={current === view ? 'active' : null}\n                                    onClick={() => viewChangeHandler(view)}>\n                                    {view}\n                                </Button>\n                            </Item>\n                        )\n                    })\n                }\n            </Tabs>\n        )\n    }\n\n    const handleNavigation = (action, date) => {\n        switch (action) {\n            case 'NEXT':\n                setCurrentDate(moment(currentDate).add(1, 'day').toDate());\n                break;\n            case 'PREV':\n                setCurrentDate(moment(currentDate).subtract(1, 'day').toDate());\n                break;\n            default:\n                setCurrentDate(date);\n        }\n    }\n\n    const handleDayClick = (date) => {\n        setCurrentDate(date);\n        viewChangeHandler('day');\n    }\n\n    const config = {\n        as: Calendar,\n        localizer: localizer,\n        startAccessor: 'start',\n        endAccessor: 'end',\n        views: views,\n        view: current,\n        date: currentDate,\n        onView: viewChangeHandler,\n        onNavigate: handleNavigation,\n        onDrillDown: (date) => handleDayClick(date),\n        events: type === 'doctor' ? events['doctor'] : current === 'day' ? events['patient'].general : events['patient'].disabled,\n        backgroundEvents: type === 'doctor' ? disabled : [],\n        min: moment().startOf('year').set({ hour: 9, minute: 30 }).toDate(),\n        max: moment().endOf('year').set({ hour: 16, minute: 30 }).toDate(),\n        timeslots: 1,\n        step: 30,\n        formats: {\n            dayHeaderFormat: width < 414 ? 'dddd, MMM DD' : 'dddd, MMMM DD',\n            dayFormat: getDayFormat(),\n            timeGutterFormat: 'HH:mm',\n        },\n        components: {\n            toolbar: ({ label, date }) =>\n                <Header ref={headerRef} view={current}>\n                    {current === 'day' &&\n                        <DailyToolbar label={type === 'doctor' ? label : 'Daily appointments scheduler'} />}\n                    <Navigation />\n                    {current === 'day' && <DailyNavigation onNavigate={handleNavigation} date={date} label={label} />}\n                    {current === 'week' && (\n                        <>\n\n                            <WeekSelector date={date} setter={setCurrentDate} />\n                            {/* <DocSelect /> */}\n                            <WeeklyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                    {current === 'month' && (\n                        <>\n                            <MonthSelector date={date} setter={setCurrentDate} />\n                            <MonthlyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                </Header>,\n            event: ({ event }) => <Event event={event} variant={current} />,\n            timeSlotWrapper: (props) => TimeSlot(props, 30, 1, true),\n        },\n        className: `calendar-${current} calendar-${type}`,\n        messages: {\n            showMore: (total) => `+ ${total}`,\n        },\n        popup: true,\n        selectable: type === 'patient' && current !== 'day',\n        onSelectSlot: type === 'patient' && current !== 'day' && (() => setPopupOpen(true))\n    }\n\n    return (\n        <>\n            <Container>\n                <StyledCalendar {...config} />\n                {\n                    type === 'patient' && current !== 'day' &&\n                    <DoctorPopup elemsHeight={height} name={selectedDoctor.label || null} open={popupOpen}\n                        handler={setPopupOpen} />\n                }\n            </Container>\n            <Footer ref={footerRef}>\n                <Legend>\n                    {\n                        colorTypes.map(({ cat, color, label }) => {\n                            return (\n                                <LegendItem key={cat} color={color} legend={label} />\n                            )\n                        })\n                    }\n                </Legend>\n            </Footer>\n        </>\n    )\n}\n\nAppointmentsCalendar.propTypes = {\n    type: PropTypes.oneOf(['doctor', 'patient']).isRequired,\n}\n\nexport default AppointmentsCalendar;","// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// utils\nimport {nanoid} from 'nanoid';\n\nconst PeriodNav = ({current, handler}) => {\n    const {periods} = usePeriodNav();\n\n    return (\n        <Container>\n            {\n                periods.map(p =>\n                    <Item key={nanoid(4)}>\n                        <Button className={current === p && 'active'} onClick={() => handler(p)}>{p}</Button>\n                    </Item>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default PeriodNav;","// styled components\nimport {Form, BtnWrapper, InputWrapper} from './style';\n\n// components\nimport CustomSelect from '@ui/Select';\nimport Field from '@ui/Field';\nimport Btn from '@ui/Btn';\nimport Grow from '@mui/material/Grow';\nimport Collapse from '@mui/material/Collapse';\n\n// utils\nimport {useDispatch} from 'react-redux';\nimport {addTodo, toggleCollapse} from '@store/features/todos';\nimport {tasksOptions} from '@constants/options';\nimport {useState} from 'react';\nimport {nanoid} from 'nanoid';\n\nconst AddForm = ({isVisible, visibilityHandler, variant}) => {\n    const [task, setTask] = useState('');\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const timestamp = Date.now();\n\n    const handleTaskChange = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleCategoryChange = e => {\n        setCategory(e);\n    }\n\n    const resetForm = () => {\n        setTask('');\n        setCategory(null);\n        visibilityHandler(false);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (task !== '' && category !== null) {\n            const id = nanoid(5);\n            dispatch(addTodo({\n                id,\n                name: task,\n                timestamp,\n                label: category.value,\n                expanded: false\n            }));\n            setTimeout(() => dispatch(toggleCollapse({id})), 300);\n            resetForm();\n        }\n    }\n\n    return (\n        <Collapse in={isVisible}>\n            <Grow in={isVisible} timeout={700}>\n                <Form onSubmit={e => handleSubmit(e)} variant={variant}>\n                    <InputWrapper>\n                        <Field placeholder=\"Task\"\n                               value={task}\n                               handler={handleTaskChange}\n                               className=\"field\"\n                        />\n                        <CustomSelect variant=\"basic\"\n                                      placeholder=\"Category\"\n                                      options={tasksOptions}\n                                      value={category}\n                                      changeHandler={handleCategoryChange}/>\n                    </InputWrapper>\n                    <BtnWrapper>\n                        <Btn text=\"Add\" type=\"submit\" className=\"success\"/>\n                        <Btn text=\"Cancel\" className=\"error\" handler={() => resetForm()}/>\n                    </BtnWrapper>\n                </Form>\n            </Grow>\n        </Collapse>\n    )\n}\n\nexport default AddForm;","import styled from 'styled-components/macro';\nimport {colors, dark, flex, light} from '@styles/vars';\nimport theme from 'styled-theming';\n\nconst border = theme('theme', {\n  light: `1px solid ${colors.light_gray} !important`,\n  dark: `1px solid ${colors.dark} !important`,\n})\n\nexport const Form = styled.form`\n  ${flex.col};\n  padding: 20px 22px;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n  })};\n  border-radius: 8px;\n  margin: ${props => props.variant === 'list' ? '24px' : '0 0 20px 0'};\n  border: ${border};\n`\n\nexport const InputWrapper = styled.div`\n  ${flex.col};\n  gap: 10px;\n  margin-bottom: 20px;\n  \n  .field, .Select__control {\n    border: ${border};\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 10px;\n`;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, light} from '@styles/vars';\n\nexport const DraggableListItem = styled.div`\n  margin: 0 2px;\n\n  &.selected {\n    .list-item {\n      &:after {\n        opacity: 1;\n      }\n\n      .checkbox label {\n        background-color: ${theme('theme', {\n          dark: dark.highlight\n        })};\n      }\n\n      .category .text {\n        opacity: 1;\n      }\n    }\n  }\n\n  &:last-of-type {\n    .list-item {\n      &:before {\n        display: none;\n      }\n    }\n  }\n`\n\nconst plannerFocused = theme('theme', {\n    light: light.highlight,\n    dark: dark.bodyBg\n});\n\nexport const DraggablePlannerItem = styled.div`\n  .list-item {\n    &:hover, &:focus {\n      background-color: ${plannerFocused};\n    }\n  }\n\n  &.selected .list-item {\n    background-color: ${plannerFocused};\n  }\n`;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, dark, effects, flex, fonts, light, textSizes, breakpoints} from '@styles/vars';\n\nexport const Label = styled.span`\n  display: none;\n  align-items: center;\n  line-height: ${textSizes['10']};\n  gap: 6px;\n  font-size: ${textSizes['10']};\n  font-family: ${fonts.accent};\n  text-transform: uppercase;\n\n  .text {\n    opacity: 0;\n    transition: opacity var(--transition);\n  }\n\n  ${breakpoints.mobileL} {\n    display: flex;\n  }\n\n  ${breakpoints.tablet} {\n    .text {\n      display: none;\n    }\n  }\n\n  ${breakpoints.laptop} {\n    .text {\n      display: inline;\n    }\n  }\n`\n\nexport const ListItemContainer = styled.div`\n  padding: 20px 22px;\n  position: relative;\n  cursor: grab;\n\n  * {\n    user-select: none !important;\n  }\n\n  input {\n    cursor: grab;\n  }\n\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 24px;\n    bottom: 0;\n    width: calc(100% - 48px);\n    border-bottom: ${theme('theme', {\n      light: effects.dashedLight,\n      dark: effects.dashedDark\n    })};\n  }\n\n  &:after {\n    display: block;\n    border-radius: 8px;\n    height: 100%;\n    top: -1px;\n    left: 0;\n    background-color: ${theme('theme', {\n      light: light.widgetBg,\n      dark: light.text\n    })};\n    box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n    z-index: 1;\n    opacity: 0;\n    transition: opacity var(--transition);\n    border-bottom: 2px ${props => colors[props.color]} solid;\n  }\n\n  .dots {\n    color: ${theme('theme', {\n      light: light.text,\n      dark: dark.text\n    })};\n    opacity: 0;\n    transition: opacity var(--transition);\n  }\n\n  &:hover {\n    &:after,\n    ${Label} .text,\n    .dots {\n      opacity: 1;\n    }\n\n    .checkbox label {\n      background-color: ${theme('theme', {\n        dark: dark.highlight\n      })};\n    }\n  }\n`\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  gap: 12px;\n`\n\nexport const Main = styled.div`\n  ${flex.col};\n  gap: 10px;\n  flex-grow: 1;\n`\n\nexport const Secondary = styled.div`\n  ${flex.col};\n  justify-content: flex-end;\n  align-items: flex-end;\n`\n\n","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, light, flex} from '@styles/vars';\n\nexport const PlannerItemContainer = styled.div`\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.highlight\n  })};\n  padding: 20px 20px 20px 24px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  ${flex.between};\n  transition: background-color var(--transition);\n  cursor: grab;\n\n  * {\n    user-select: none;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  ${flex.col};\n  gap: 6px;\n`;\n\nexport const TimestampWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, light, flex} from '@styles/vars'\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Square = styled.div`\n  input {\n    display: none;\n\n    &:checked + label span {\n      opacity: 1;\n    }\n  }\n\n  label {\n    ${flex.col};\n    ${flex.center};\n    width: 20px;\n    height: 20px;\n    border-radius: 4px;\n    background-color: ${theme('theme', {\n      light: colors.light_gray,\n      dark: light.text\n    })};\n    cursor: pointer;\n    transition: var(--transition);\n    position: relative;\n\n    span {\n      display: block;\n      border-radius: 2px;\n      background-color: ${colors.blue};\n      width: 12px;\n      height: 12px;\n      transition: opacity var(--transition);\n      opacity: 0;\n    }\n  }\n`\n\nconst Basic = styled.div`\n  input {\n    display: none;\n    &:checked + label {\n      color: ${colors.blue};\n    }\n  }\n\n  label {\n    color: #BBCDD9;\n    transition: var(--transition);\n\n    &:hover, &:focus {\n      color: ${colors.blue};\n    }\n  }\n`;\n\nconst Checkbox = ({variant, handler, checked, id}) => {\n    const commonProps = {\n        type: 'checkbox',\n        id,\n        defaultChecked: checked,\n        onChange: handler\n    }\n\n    const Layout = () => {\n        switch (variant) {\n            default:\n            case 'square':\n                return (\n                    <Square className=\"checkbox\">\n                        <input {...commonProps} />\n                        <label htmlFor={id} tabIndex={0}>\n                            <span></span>\n                        </label>\n                    </Square>\n                )\n            case 'basic':\n                return (\n                    <Basic>\n                        <input {...commonProps} />\n                        <label htmlFor={id} tabIndex={0}>\n                            <i className=\"icon icon-check\"/>\n                        </label>\n                    </Basic>\n                )\n        }\n    }\n\n    return <Layout/>\n}\n\nCheckbox.propTypes = {\n    variant: PropTypes.oneOf(['square', 'basic']).isRequired,\n    handler: PropTypes.func,\n    checked: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport default Checkbox;","// styled components\nimport {BasicBadge} from '@ui/Badge/style';\nimport {ListItemContainer, Content, Main, Label, Secondary} from './list';\nimport {PlannerItemContainer, Wrapper, TimestampWrapper} from '@components/Todos/Todo/planner';\n\n// components\nimport Timestamp from '@ui/Timestamp';\nimport Checkbox from '@ui/Checkbox';\nimport Collapse from '@mui/material/Collapse';\nimport {Badge} from '@ui/Badge/style';\n\n// utils\nimport {toggleComplete} from '@store/features/todos';\nimport {tasksColors} from '@constants/colors';\nimport moment from 'moment';\n\n// hooks\nimport {useDispatch} from 'react-redux';\n\nconst Todo = ({data, variant}) => {\n    const {id, name, timestamp, complete, label, expanded} = data;\n    const dispatch = useDispatch();\n    const color = tasksColors.find(({cat}) => cat === label).color;\n\n    const TodoLayout = () => {\n        switch (variant) {\n            default:\n            case 'list':\n                return (\n                    <ListItemContainer color={color} className=\"list-item\" tabIndex={0}>\n                        <Content>\n                            <Checkbox variant=\"square\" id={`task-${id}`} checked={complete}\n                                      handler={() => dispatch(toggleComplete({id}))}/>\n                            <Main>\n                                <input type=\"text\" defaultValue={name} readOnly={true} />\n                            </Main>\n                           \n                        </Content>\n                        \n                    </ListItemContainer>\n                    \n                )\n            case 'planner':\n                return (\n                    <PlannerItemContainer className=\"list-item\" tabIndex={0}>\n                        <Wrapper>\n                            <span>{name}</span>\n                            <TimestampWrapper>\n                                <Badge color={color}/>\n                                <Timestamp date={moment(timestamp).toDate()} time={true}/>\n                            </TimestampWrapper>\n                        </Wrapper>\n                        <Checkbox variant=\"basic\" id={`task-${id}`} checked={complete}\n                                  handler={() => dispatch(toggleComplete({id}))}/>\n                    </PlannerItemContainer>\n                )\n        }\n    }\n\n    return (\n        <Collapse in={expanded} timeout={300}>\n            <TodoLayout/>\n        </Collapse>\n    )\n}\n\nexport default Todo;","// styled components\nimport {DraggableListItem, DraggablePlannerItem} from './style';\n\n// components\nimport Todo from '@components/Todos/Todo';\nimport {\n    DndContext,\n    closestCenter,\n    TouchSensor,\n    PointerSensor,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport {\n    arrayMove,\n    SortableContext,\n    verticalListSortingStrategy,\n    useSortable\n} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport {restrictToVerticalAxis} from '@dnd-kit/modifiers';\n\n// hooks\nimport {useDispatch, useSelector} from 'react-redux';\nimport useMobileDetect from 'use-mobile-detect-hook';\n\n// utils\nimport propTypes from 'prop-types';\nimport {updateOrder} from '@store/features/todos';\n\nconst DnDLayout = ({variant}) => {\n    const device = useMobileDetect();\n    const todos = useSelector(state => state['todos'].todos);\n    const dispatch = useDispatch();\n    const DnDItem = variant === 'list' ? DraggableListItem : DraggablePlannerItem;\n    const sensors = useSensors(useSensor(PointerSensor, {\n        activationConstraint: {\n            distance: 15,\n        }\n    }), useSensor(TouchSensor, {\n        activationConstraint: {\n            delay: 2000,\n            tolerance: 5,\n        },\n    }));\n\n    const SortableItem = (props) => {\n        const {\n            attributes,\n            listeners,\n            setNodeRef,\n            transform,\n            transition,\n            isOver,\n            isDragging,\n        } = useSortable({id: props.id});\n\n        const style = {\n            transform: CSS.Transform.toString(transform),\n            transition,\n            zIndex: isOver || isDragging ? 10 : 0,\n            position: 'relative',\n            touchAction: 'none',\n        };\n\n        return (\n            <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n                {props.children}\n            </div>\n        );\n    }\n\n    const onDragEnd = e => {\n        const {active, over} = e;\n\n        if (active.id !== over.id) {\n            const oldIndex = todos.findIndex(({id}) => id === active.id);\n            const newIndex = todos.findIndex(({id}) => id === over.id);\n            dispatch(updateOrder(arrayMove(todos, oldIndex, newIndex)));\n        }\n    }\n\n    return (\n        <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={onDragEnd}\n                    modifiers={[restrictToVerticalAxis]} autoScroll={true}>\n            <SortableContext items={todos} strategy={verticalListSortingStrategy} disabled={!device.isDesktop()}>\n                {todos.map(todo => (\n                    <SortableItem key={todo.id} id={todo.id}>\n                        <DnDItem>\n                            <Todo data={todo} variant={variant}/>\n                        </DnDItem>\n                    </SortableItem>\n                ))}\n            </SortableContext>\n        </DndContext>\n    )\n}\n\nDnDLayout.propTypes = {\n    variant: propTypes.oneOf(['planner', 'list']).isRequired\n}\n\nexport default DnDLayout;","import {tasksColors} from '@constants/colors';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport Legend from '@ui/Legend';\n\nexport default function TodosLegend() {\n    return (\n        <Legend>\n            {tasksColors.map(({color, cat}) => <LegendItem key={cat} color={color} legend={cat} />)}\n        </Legend>\n    )\n}","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","// styling\nimport styled from 'styled-components/macro';\n// styled components\nimport { Form, BtnWrapper, InputWrapper } from '../../components/Todos/AddForm/style';\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n// components\nimport CustomSelect from '@ui/Select';\nimport Field from '@ui/Field';\nimport Grow from '@mui/material/Grow';\nimport Collapse from '@mui/material/Collapse';\n// utils\nimport { useDispatch } from 'react-redux';\nimport { addTodo, toggleCollapse } from '@store/features/todos';\nimport { tasksOptions } from '@constants/options';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport { Navbar } from '@components/Widget/style';\nimport Btn from '@ui/Btn'\nimport { useSnackbar } from 'notistack';\nimport TodosLegend from '@components/Todos/TodosLegend';\nimport AddForm from '@components/Todos/AddForm';\nimport DnDLayout from '@components/Todos/DnDLayout';\nimport ScrollContainer from '@components/ScrollContainer';\n// hooks\nimport { useSelector } from 'react-redux';\nimport { useRef, useEffect } from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport { InputLabel, TextField, FormControl, MenuItem, Paper, Typography, Select } from '@mui/material';\nimport { BookAppointment, GetEmployess, GetLocation, GetPatientAppointment, GetTypeAppointment } from '@components/Api/AllApi';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Cookies from 'js-cookie';\nconst Footer = styled.div`\n  padding: 2px 24px 22px 24px;\n`;\n\nconst TasksList = () => {\n    const [count, setCount] = useState(0)\n    const { enqueueSnackbar } = useSnackbar();\n    const [open, setOpen] = useState(false);\n    const [filteredOptions, setFilteredOptions] = useState([]);\n    const [selectedPatientId, setSelectedPatientId] = useState(null);\n    const [patientName, setPatientName] = useState('');\n    const [employeeId, setEmployeeId] = useState('');\n    const [clinicLocation, setClinicLocation] = useState('');\n    const [type, setType] = useState('');\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [note, setNote] = useState('');\n    const [appointmentColor, setAppointmentColor] = useState('');\n    const todos = useSelector(state => state['todos'].todos);\n    const [isFormVisible, setFormVisible] = useState(false);\n    const [optionsData, setOptions] = useState([]);\n\n    const [ttt, setTTT] = useState(false)\n    const [GetLoc, setGetLoc] = useState(false)\n    const [GetEmpl, setGetEmp] = useState(false)\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const listRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n\n\n\n    const dataFromLocalStorage = localStorage.getItem(\"provider\");\n\n    // Parse the JSON data back to an object\n    const parsedData = JSON.parse(dataFromLocalStorage);\n\n    // Now, \"parsedData\" will contain the full object with all the properties that were originally present in the `data` object\n    console.log(parsedData, \"AL Data AAAAAAAAAAAAAAAAAAAAA\");\n\n    const ValueID = parsedData?.id;\n    const ClinicID = parsedData?.company_id;\n    console.log(ValueID, \"This IS Clinic Single ID\")\n    console.log(ClinicID, \"This IS Clinic  ID\")\n\n\n    const [task, setTask] = useState('');\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const timestamp = Date.now();\n\n    const handleTaskChange = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleCategoryChange = e => {\n        setCategory(e);\n    }\n\n    const resetForm = () => {\n        setTask('');\n        setCategory(null);\n    }\n\n\n\n    const handleSubmit = (event) => {\n        let token = Cookies.get(\"provider\");\n        console.log(token, \"This Is token for all Api's\");\n        event.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Accept\", \"application/json\");\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var formdata = new FormData();\n        console.log(selectedPatientId, \"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\")\n        formdata.append(\"patient_id\", selectedPatientId);\n        formdata.append(\"provider_company_id\", ClinicID);\n        formdata.append(\"type_id\", type);\n        formdata.append(\"start_date\", startDate);\n        formdata.append(\"end_date\", endDate);\n        formdata.append(\"note\", note);\n        formdata.append(\"appointment_color\", appointmentColor);\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n\n        return fetch(\"https://medical.studiomyraa.com/api/provider_appointment\", requestOptions)\n            .then((res) => res.json())\n            .then((json) => {\n                console.log(json, \"anjkhgdchjm\");\n                // alert(json.messege)\n                enqueueSnackbar(json.messege, {\n                    variant: 'success',\n                    anchorOrigin: {\n                        vertical: 'top',\n                        horizontal: 'right',\n                    },\n                });\n                setCount(count + 1)\n                // Reload the current web page\n                window.location.reload();\n\n            })\n            .catch((error) => enqueueSnackbar(error, \"Something Went Wrong try again!\", {\n                variant: 'error',\n                anchorOrigin: {\n                    vertical: 'top',\n                    horizontal: 'right',\n                }\n            }));\n\n    };\n\n\n\n\n\n\n\n\n    useEffect(() => {\n        GetAllTypeAppointmentData();\n        getPatientData();\n    }, [patientName, count]);\n\n\n    const getPatientData = async () => {\n        if (patientName) {\n            try {\n                // Get the clinic ID from where it's available, or define it properly\n                const Filerpatient = await GetPatientAppointment(patientName);\n                console.log(Filerpatient, \"IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIii\");\n\n                if (Filerpatient) {\n                    // Here, we check if Filerpatient is an object with a \"then\" function (i.e., a Promise).\n                    if (typeof Filerpatient.then === 'function') {\n                        // If it's a Promise, we use \"await\" to get the resolved data.\n                        const data = await Filerpatient;\n                        console.log(data.results, \"AAAAAAAAAAAAAA\");\n                        setFilteredOptions(data.results)\n                    } else {\n                        console.log(Filerpatient.results?.name, \"AAAAAAAAAAAAAA\");\n                        setFilteredOptions(Filerpatient.results)\n                        console.log(Filerpatient.results, \"UUUUUUUUUUUUUUUuu\")\n                    }\n                }\n            } catch (error) {\n                console.error('Error fetching patient data:', error);\n                setOptions([]);\n            }\n        } else {\n            setOptions([]);\n        }\n    };\n    const GetAllTypeAppointmentData = () => {\n        let TyoeData = GetTypeAppointment()\n        if (TyoeData) {\n            TyoeData.then((data) => {\n                console.log(data.result)\n                setTTT(data.result)\n            })\n        }\n    }\n\n\n    const handleChange = (event) => {\n        setPatientName(event.target.value);\n    };\n\n    const handleInputFocus = () => {\n        setOpen(true);\n    };\n\n    const handleInputBlur = () => {\n        setOpen(false);\n    };\n\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n\n\n\n\n\n\n    return (\n        <Widget name=\"TasksList\" mobile={600}>\n\n\n            <Form onSubmit={handleSubmit} >\n                <InputLabel sx={{ margin: 1 }}>Patient search</InputLabel>\n\n                <Autocomplete\n                    size=\"small\"\n                    required\n                    options={filteredOptions}\n                    getOptionLabel={(option) => option.name}\n                    sx={{ width: 300 }}\n\n                    renderInput={(params) => <TextField {...params} />}\n                    onInputChange={(event, newValue) => setPatientName(newValue)}\n                    onChange={(event, newValue) => {\n                        if (newValue) {\n                            setSelectedPatientId(newValue.id); // Update selectedPatientId with the ID of the selected option\n                            getPatientData(newValue.id); // Call getPatientData with the selected option's ID\n                        } else {\n                            setSelectedPatientId(null); // Clear selectedPatientId if no option is selected\n                        }\n                    }}\n                />\n\n                <InputLabel sx={{ margin: 1 }}>Type</InputLabel>\n                <Select\n                    labelId=\"dropdown-label\"\n                    fullWidth\n                    size='small'\n                    value={type}\n                    required\n                    onChange={(e) => setType(e.target.value)}\n                >\n                    {\n                        ttt && ttt?.map((data) => {\n                            return (\n\n                                <MenuItem value={data.id}>{data.name}{data.length}</MenuItem>\n                            )\n                        })\n                    }\n\n                </Select>\n\n                <InputLabel sx={{ margin: 1 }}>Appointment Date/Time</InputLabel>\n                <TextField\n                    // onChange={handleDateChange}\n                    value={startDate}\n                    required\n                    onChange={(e) => {\n                        const inputDate = e.target.value;\n                        setStartDate(inputDate);\n                    }}\n                    type=\"datetime-local\"\n\n                    placeholder=\"Select Start Date\"\n                    fullWidth size=\"small\"\n                />\n\n                <InputLabel sx={{ margin: 1 }}>Appointment End Date/Time</InputLabel>\n                <TextField\n                    required\n                    value={endDate}\n                    onChange={(e) => {\n                        const inputDate = e.target.value;\n                        setEndDate(inputDate)\n                    }}\n                    type=\"datetime-local\"\n\n                    placeholder=\"Select End Date\"\n                    fullWidth size=\"small\"\n                />\n\n                <InputLabel sx={{ margin: 1 }}>Notes</InputLabel>\n                <TextField size=\"small\" value={note} onChange={(e) => setNote(e.target.value)} fullWidth required />\n\n                <InputLabel sx={{ margin: 1 }}>Appointment Color</InputLabel>\n                <TextField\n                    size=\"small\"\n                    value={appointmentColor}\n                    onChange={(e) => setAppointmentColor(e.target.value)}\n                    fullWidth\n                    required\n\n                    // You can add the \"type\" attribute with a value of \"color\" to provide a color picker input.\n                    type=\"color\"\n\n                    // You can set a placeholder to provide a hint to users about the expected format or color value.\n                    placeholder=\"#RRGGBB\"  // Replace with the format you prefer.\n                />\n\n\n\n                <button style={{ width: '100%', height: 40, marginTop: 15, backgroundColor: 'skyblue', color: 'white', borderRadius: 4 }}>Create Appointment</button>\n\n            </Form>\n        </Widget>\n    )\n}\n\nexport default TasksList;","// components\nimport Page from '@layout/Page';\nimport TasksList from '@widgets/TasksList';\nimport ConfirmedDiagnoses from '@widgets/ConfirmedDiagnoses';\nimport DiagnosesDonut from '@widgets/DiagnosesDonut';\nimport RadarAreaChart from '@widgets/RadarAreaChart';\nimport PatientCalendar from '@widgets/PatientCalendar';\n// utils\nimport { useState } from 'react';\nimport { Box } from '@mui/material';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\nimport MYCalendar from '@components/CustomAppointment.js/Calender';\n\n\n\n\n\nconst DashboardC = () => {\n    const [currentView, setView] = useState('day');\n\n    let pageTitle = '';\n    switch (currentView) {\n        case 'week':\n            pageTitle = 'Available Appointments Time';\n            break;\n        case 'month':\n            pageTitle = 'Appointments Schedule';\n            break;\n        default:\n            pageTitle = 'Your appointments';\n            break;\n    }\n    return (\n\n        <>\n            <Sidebar />\n            <Panel />\n            <Box title=\"Appointments\" sx={{ display: 'flex', marginTop: 3, gap: 5 }}>\n                <div key=\"task-list\">\n                    <TasksList />\n                </div>\n                <div key=\"task-list\">\n                    <MYCalendar current={currentView} handler={setView} />\n                </div>\n\n\n            </Box>\n        </>\n\n\n    )\n}\n\nexport default DashboardC;","import styled from 'styled-components/macro';\nimport {flex, textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  gap: 22px;\n  margin-top: 20px;\n  ${flex.col}\n`\n\nexport const Block = styled.div`\n  display: flex;\n  ${flex.between}\n  margin-bottom: 7px;\n  font-size: ${textSizes['14']};\n`\n\nexport const Text = styled.div`\n  display: flex;\n  gap: 4px;\n  font-family: ${fonts.accent};\n  \n  .num {\n    font-weight: 500;\n  }\n  & + .label {\n    text-transform: capitalize;\n  }\n`"],"names":["_ref","_ref$color","color","colors","blue","value","_ref$style","style","theme","useTheme","_jsx","LinearProgress","className","variant","sx","_objectSpread","backgroundColor","dark","highlight","height","borderRadius","props","step","day","isRender","differenceMs","moment","isCurrentTimeSlot","hours","Date","getHours","minutes","getMinutes","currentTime","addZero","timeIndicator","children","top","concat","indicatorPosition","minutesFromProps","Math","abs","calculateIndicatorPosition","cloneElement","format","label","_Fragment","date","setter","calendarWeek","week","currentWeek","firstWeek","startOf","lastWeek","endOf","Navigator","handler","e","currentTarget","dataset","direction","subtract","toDate","add","text","prevDisabled","nextDisabled","options","getWeekArray","map","item","i","startLong","endLong","_useState","useState","_useState2","_slicedToArray","selected","setSelected","CustomSelect","changeHandler","calendarMonth","month","currentMonth","getMonthArray","formatted","set","disabled","start","hour","minute","second","end","type","events","doctor","name","allDay","patient","general","viewChangeHandler","current","width","useWindowSize","localizer","momentLocalizer","footerRef","useRef","headerRef","setHeight","useEffect","offsetHeight","doctorsOptions","_useState3","_useState4","selectedDoctor","_useState5","_useState6","popupOpen","setPopupOpen","_useState7","_useState8","setPost","AppShed","GetAppointmtentREwie","then","data","console","log","result","_useState9","_useState10","currentDate","setCurrentDate","views","Navigation","Tabs","view","Item","Button","onClick","handleNavigation","action","config","as","Calendar","startAccessor","endAccessor","onView","onNavigate","onDrillDown","handleDayClick","backgroundEvents","min","max","timeslots","formats","dayHeaderFormat","dayFormat","getDayFormat","timeGutterFormat","components","toolbar","_ref2","_jsxs","Header","ref","DailyToolbar","DailyNavigation","WeekSelector","WeeklyNavigation","MonthSelector","MonthlyNavigation","event","_ref3","Event","timeSlotWrapper","TimeSlot","messages","showMore","total","popup","selectable","onSelectSlot","Container","StyledCalendar","DoctorPopup","elemsHeight","open","Footer","Legend","colorTypes","_ref4","cat","LegendItem","legend","periods","usePeriodNav","p","nanoid","isVisible","visibilityHandler","task","setTask","category","setCategory","dispatch","useDispatch","timestamp","now","resetForm","Collapse","in","Grow","timeout","Form","onSubmit","preventDefault","id","addTodo","expanded","setTimeout","toggleCollapse","handleSubmit","InputWrapper","Field","placeholder","target","tasksOptions","BtnWrapper","Btn","border","light","light_gray","styled","form","withConfig","componentId","flex","col","div","DraggableListItem","plannerFocused","bodyBg","DraggablePlannerItem","Label","span","textSizes","fonts","accent","breakpoints","mobileL","tablet","laptop","ListItemContainer","effects","dashedLight","dashedDark","widgetBg","Content","Main","PlannerItemContainer","between","Wrapper","TimestampWrapper","Square","center","Basic","checked","commonProps","defaultChecked","onChange","Layout","htmlFor","tabIndex","complete","tasksColors","find","TodoLayout","Checkbox","toggleComplete","defaultValue","readOnly","Badge","Timestamp","time","device","useMobileDetect","todos","useSelector","state","DnDItem","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","TouchSensor","delay","tolerance","SortableItem","_useSortable","useSortable","attributes","listeners","setNodeRef","transform","transition","isOver","isDragging","CSS","Transform","toString","zIndex","position","touchAction","DndContext","collisionDetection","closestCenter","onDragEnd","active","over","oldIndex","findIndex","newIndex","updateOrder","arrayMove","modifiers","restrictToVerticalAxis","autoScroll","SortableContext","items","strategy","verticalListSortingStrategy","isDesktop","todo","Todo","TodosLegend","depsOptions","testsOptions","doctors","forEach","push","Avatar","avatar","alt","size","count","setCount","enqueueSnackbar","useSnackbar","filteredOptions","setFilteredOptions","selectedPatientId","setSelectedPatientId","patientName","setPatientName","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","setType","_useState17","_useState18","startDate","setStartDate","_useState19","_useState20","endDate","setEndDate","_useState21","_useState22","note","setNote","_useState23","_useState24","appointmentColor","setAppointmentColor","_useState25","_useState26","_useState27","_useState28","setOptions","_useState29","_useState30","ttt","setTTT","_useState31","_useState32","_useState33","_useState34","dataFromLocalStorage","useContentHeight","localStorage","getItem","parsedData","JSON","parse","ValueID","ClinicID","company_id","_useState35","_useState36","_useState37","_useState38","GetAllTypeAppointmentData","getPatientData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","Filerpatient","_Filerpatient$results","wrap","_context","prev","next","GetPatientAppointment","sent","results","t0","error","stop","apply","arguments","TyoeData","GetTypeAppointment","_useState39","_useState40","Widget","mobile","token","Cookies","get","myHeaders","Headers","append","formdata","FormData","fetch","method","headers","body","redirect","res","json","messege","anchorOrigin","vertical","horizontal","window","location","reload","catch","InputLabel","margin","Autocomplete","required","getOptionLabel","option","renderInput","params","TextField","onInputChange","newValue","Select","labelId","fullWidth","MenuItem","length","inputDate","marginTop","currentView","setView","Sidebar","Panel","Box","title","display","gap","TasksList","MYCalendar","ul"],"sourceRoot":""}