{"version":3,"file":"static/js/306.7ede06b1.chunk.js","mappings":"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","sources":["UI/IconLink/index.jsx","components/AppointmentsCalendar/TimeSlot/index.jsx","components/AppointmentsCalendar/DailyToolbar/index.jsx","components/AppointmentsCalendar/WeeklyNavigation/index.jsx","components/AppointmentsCalendar/WeekSelector/index.jsx","components/AppointmentsCalendar/MonthlyNavigation/index.jsx","components/AppointmentsCalendar/MonthSelector/index.jsx","db/calendar_appointments.js","components/AppointmentsCalendar/index.jsx","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Labels/index.jsx","components/Chart/Tooltip/index.jsx","components/TestItem/style.js","components/TestItem/index.jsx","components/Widget/WidgetNav/index.jsx","constants/options.js","db/patient_tests.js","hooks/usePeriodNav.js","widgets/Statistics/style.js","widgets/Statistics/index.jsx","widgets/RecentTests/index.jsx","pages/DashboardK.jsx","utils/numbers.js","components/ModalWindow/CloseBtn/index.jsx","widgets/EventsCompactCalendar/index.jsx","widgets/EventsCompactCalendar/style.js","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx","db/gender.js","widgets/PatientsGenderLineChart/index.jsx","components/PaymentItem/style.js","components/PaymentItem/index.jsx","db/payments_history.js","widgets/PaymentsHistory/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Link = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  font-size: ${textSizes['14']};\n  color: ${colors.blue};\n  line-height: 1;\n  transition: color var(--transition);\n  width: fit-content;\n  \n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &:hover, &:focus {\n    color: ${darken(0.1, colors.blue)};\n  }\n\n  .icon {\n    font-size: ${textSizes['12']};\n    color: ${colors.gray};\n  }\n`\n\nconst IconLink = ({href = '#', title}) => {\n    return (\n        <Link href={href}>\n            <i className=\"icon icon-link\"></i>\n            <span>{title}</span>\n        </Link>\n    )\n}\n\nIconLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    href: PropTypes.string\n}\n\nexport default IconLink;","// utils\nimport {cloneElement} from 'react';\nimport moment from 'moment';\nimport {addZero} from '@utils/numbers';\n\nconst TimeSlot = (props, step, day, isRender) => {\n    const differenceMs = moment() - moment(props.value)\n    const isCurrentTimeSlot = (differenceMs / (60 * 1000)) > 0 && (differenceMs / (60 * 1000)) < step;\n    let hours = new Date().getHours(),\n        minutes = new Date().getMinutes();\n    const currentTime = hours + ':' + addZero(minutes);\n\n    let timeIndicator = {}\n    let addStyle = {}\n\n    function calculateIndicatorPosition() {\n        let minutesFromProps = props.value.getMinutes(),\n            indicatorPosition;\n        switch (minutesFromProps) {\n            default:\n            case 0:\n                indicatorPosition = minutesFromProps + minutes;\n                break;\n            case 30:\n                indicatorPosition = Math.abs(minutesFromProps - minutes);\n                break;\n        }\n        return indicatorPosition;\n    }\n\n    if (isCurrentTimeSlot && isRender) {\n        timeIndicator.className = 'current-time'\n        timeIndicator.children =\n            <span className=\"time-indicator\" style={{top: `${100 / step * calculateIndicatorPosition()}%`}}>\n                <span className=\"label\">{currentTime}</span>\n            </span>\n    }\n\n    return cloneElement(\n        props.children,\n        {\n            style: {...addStyle},\n            'data-time': moment(props.value).format('HH:mm'),\n            ...timeIndicator\n        })\n}\n\nexport default TimeSlot;","const DailyToolbar = ({label}) => {\n    return (\n        <>\n            <h2>{label}</h2>\n        </>\n    )\n}\n\nexport default DailyToolbar;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst WeeklyNavigation = ({date, setter}) => {\n    const calendarWeek = moment(date).week();\n    const currentWeek = moment().week();\n\n    const handleWeekNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'week').startOf('week').toDate());\n        } else {\n            setter(moment(date).add(1, 'week').startOf('week').toDate());\n        }\n    }\n\n    const firstWeek = moment(date).startOf('year').week(),\n        lastWeek = moment(date).endOf('year').week();\n\n    let label;\n    if (currentWeek === calendarWeek) label = 'This week';\n    else if (currentWeek + 1 === calendarWeek) label = 'Next week';\n    else if (currentWeek - 1 === calendarWeek) label = 'Last week';\n    else label = 'Week ' + calendarWeek;\n\n    return (\n        <Navigator handler={handleWeekNavigation}\n                   text={label}\n                   prevDisabled={calendarWeek === firstWeek}\n                   nextDisabled={calendarWeek === lastWeek}/>\n    )\n}\n\nexport default WeeklyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getWeekArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst WeekSelector = ({date, setter}) =>{\n    const options = getWeekArray().map((item, i) => {\n        return {\n            value: i,\n            label: `${item.startLong} - ${item.endLong}`,\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).week() - 1]);\n\n    const handleWeekChange = e => {\n        setSelected(e);\n        setter(moment(date).week(e.value + 1).startOf('week').toDate());\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleWeekChange}/>\n}\n\nexport default WeekSelector;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst MonthlyNavigation = ({date, setter}) => {\n    const calendarMonth = moment(date).month();\n    const currentMonth = moment().month();\n\n    const handleMonthNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'month').toDate());\n        } else {\n            setter(moment(date).add(1, 'month').toDate());\n        }\n    }\n\n    let label;\n    if (currentMonth === calendarMonth) label = 'This month';\n    else if (currentMonth + 1 === calendarMonth) label = 'Next month';\n    else if (currentMonth - 1 === calendarMonth) label = 'Last month';\n    else label = `${moment(date).format('MMMM')}`;\n\n    return (\n        <Navigator handler={handleMonthNavigation}\n                   text={label}\n                   prevDisabled={calendarMonth === 0}\n                   nextDisabled={calendarMonth === 11}/>\n    )\n}\n\nexport default MonthlyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getMonthArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst MonthSelector = ({date, setter}) => {\n    const options = getMonthArray().map(item => {\n        return {\n            value: item.month,\n            label: item.formatted\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).month()]);\n\n    const handleMonthChange = e => {\n        setSelected(e);\n        const month =  moment(e.value).month();\n        setter(moment(date).set({month: month, date: 1}));\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleMonthChange}/>\n}\n\nexport default MonthSelector;","import moment from 'moment';\n\nexport const disabled = [\n    {\n        start: moment().set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n\n];\n\nexport const events = {\n    doctor: [\n        {\n            name: 'MRI',\n            start: moment().set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n\n    ],\n    patient: {\n        general: [\n            {\n                name: '3:00 PM  Patient Nagar',\n                start: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n                end: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            }\n\n\n        ],\n        disabled: disabled\n    }\n}","// styles\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// styled components\nimport { Container, Header, StyledCalendar, Footer } from './style';\nimport { Container as Tabs, Item, Button } from '@ui/TabNav/style';\n\n// components\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport Event from '@components/AppointmentsCalendar/Event';\nimport TimeSlot from '@components/AppointmentsCalendar/TimeSlot';\nimport DailyToolbar from '@components/AppointmentsCalendar/DailyToolbar';\nimport DailyNavigation from '@components/AppointmentsCalendar/DailyNavigation';\nimport WeeklyNavigation from '@components/AppointmentsCalendar/WeeklyNavigation';\nimport WeekSelector from '@components/AppointmentsCalendar/WeekSelector';\nimport MonthlyNavigation from '@components/AppointmentsCalendar/MonthlyNavigation';\nimport MonthSelector from '@components/AppointmentsCalendar/MonthSelector';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport DoctorPopup from '@components/AppointmentsCalendar/DoctorPopup';\n\n// utils\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { colorTypes } from '@constants/colors';\nimport { doctorsOptions } from '@constants/options';\n\n// hooks\nimport { useState, useRef, useEffect } from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport { events, disabled } from '@db/calendar_appointments';\nimport CustomSelect from '@ui/Select';\nimport { GetAppointmtentREwie } from '@components/Api/AllApi';\n\nconst AppointmentsCalendar = ({ viewChangeHandler, current, type }) => {\n    const width = useWindowSize().width;\n    const localizer = momentLocalizer(moment);\n\n    const footerRef = useRef(null);\n    const headerRef = useRef(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        setHeight(headerRef.current.offsetHeight + footerRef.current.offsetHeight);\n    }, [headerRef, footerRef]);\n\n    const options = doctorsOptions();\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    const [post, setPost] = useState(false)\n\n    useEffect(() => {\n\n        const AppShed = GetAppointmtentREwie();\n        if (AppShed) {\n            AppShed.then((data) => {\n                console.log(data, \"App ShedulerA\")\n                setPost(data?.result, \"App ShedulerA\")\n            })\n        }\n\n\n    }, [])\n\n\n    const getDayFormat = () => {\n        switch (true) {\n            case width < 768:\n                return 'D';\n            case width < 1600:\n                return 'ddd, D';\n            default:\n                return 'dddd D MMMM';\n        }\n    }\n\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\n    const views = ['month', 'week', 'day'];\n    const Navigation = () => {\n        return (\n            <Tabs className=\"tabs\">\n                {\n                    views.map(view => {\n                        return (\n                            <Item key={view}>\n                                <Button className={current === view ? 'active' : null}\n                                    onClick={() => viewChangeHandler(view)}>\n                                    {view}\n                                </Button>\n                            </Item>\n                        )\n                    })\n                }\n            </Tabs>\n        )\n    }\n\n    const handleNavigation = (action, date) => {\n        switch (action) {\n            case 'NEXT':\n                setCurrentDate(moment(currentDate).add(1, 'day').toDate());\n                break;\n            case 'PREV':\n                setCurrentDate(moment(currentDate).subtract(1, 'day').toDate());\n                break;\n            default:\n                setCurrentDate(date);\n        }\n    }\n\n    const handleDayClick = (date) => {\n        setCurrentDate(date);\n        viewChangeHandler('day');\n    }\n\n    const config = {\n        as: Calendar,\n        localizer: localizer,\n        startAccessor: 'start',\n        endAccessor: 'end',\n        views: views,\n        view: current,\n        date: currentDate,\n        onView: viewChangeHandler,\n        onNavigate: handleNavigation,\n        onDrillDown: (date) => handleDayClick(date),\n        events: type === 'doctor' ? events['doctor'] : current === 'day' ? events['patient'].general : events['patient'].disabled,\n        backgroundEvents: type === 'doctor' ? disabled : [],\n        min: moment().startOf('year').set({ hour: 9, minute: 30 }).toDate(),\n        max: moment().endOf('year').set({ hour: 16, minute: 30 }).toDate(),\n        timeslots: 1,\n        step: 30,\n        formats: {\n            dayHeaderFormat: width < 414 ? 'dddd, MMM DD' : 'dddd, MMMM DD',\n            dayFormat: getDayFormat(),\n            timeGutterFormat: 'HH:mm',\n        },\n        components: {\n            toolbar: ({ label, date }) =>\n                <Header ref={headerRef} view={current}>\n                    {current === 'day' &&\n                        <DailyToolbar label={type === 'doctor' ? label : 'Daily appointments scheduler'} />}\n                    <Navigation />\n                    {current === 'day' && <DailyNavigation onNavigate={handleNavigation} date={date} label={label} />}\n                    {current === 'week' && (\n                        <>\n\n                            <WeekSelector date={date} setter={setCurrentDate} />\n                            {/* <DocSelect /> */}\n                            <WeeklyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                    {current === 'month' && (\n                        <>\n                            <MonthSelector date={date} setter={setCurrentDate} />\n                            <MonthlyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                </Header>,\n            event: ({ event }) => <Event event={event} variant={current} />,\n            timeSlotWrapper: (props) => TimeSlot(props, 30, 1, true),\n        },\n        className: `calendar-${current} calendar-${type}`,\n        messages: {\n            showMore: (total) => `+ ${total}`,\n        },\n        popup: true,\n        selectable: type === 'patient' && current !== 'day',\n        onSelectSlot: type === 'patient' && current !== 'day' && (() => setPopupOpen(true))\n    }\n\n    return (\n        <>\n            <Container>\n                <StyledCalendar {...config} />\n                {\n                    type === 'patient' && current !== 'day' &&\n                    <DoctorPopup elemsHeight={height} name={selectedDoctor.label || null} open={popupOpen}\n                        handler={setPopupOpen} />\n                }\n            </Container>\n            <Footer ref={footerRef}>\n                <Legend>\n                    {\n                        colorTypes.map(({ cat, color, label }) => {\n                            return (\n                                <LegendItem key={cat} color={color} legend={label} />\n                            )\n                        })\n                    }\n                </Legend>\n            </Footer>\n        </>\n    )\n}\n\nAppointmentsCalendar.propTypes = {\n    type: PropTypes.oneOf(['doctor', 'patient']).isRequired,\n}\n\nexport default AppointmentsCalendar;","// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","// styling\nimport styled from 'styled-components/macro';\nimport {light, textSizes, fonts, flex} from '@styles/vars';\n\nexport const StyledTooltip = styled.div`\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  color: #fff;\n  box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n  border-radius: 8px;\n  background-color: ${light.text};\n  height: 20px;\n  padding: 0 8px;\n  display: flex;\n  ${flex.center}\n  line-height: 1;\n  position: relative;\n  text-transform: uppercase;\n  \n  &.multiple {\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    height: auto;\n    \n    .item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      \n      .color {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n      }\n    }\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -3px;\n    transform: translateX(-50%) rotate(-45deg);\n    width: 8px;\n    height: 8px;\n    background-color: ${light.text};\n    display: ${props => props.arrow ? 'block' : 'none'};\n  }\n`;\n\nconst ChartTooltip = ({active, payload, tooltip, arrow = false, multi = false, ...props}) => {\n    if (multi) {\n        if (!active || !tooltip) return null\n        for (const item of payload)\n            if (item.dataKey === tooltip)\n                return <StyledTooltip arrow={arrow}>{item.value}</StyledTooltip>\n        return null\n    } else {\n        if (!active || !payload[0]) return null\n        return (\n            <StyledTooltip arrow={arrow}> {payload[0].value} {props.right && payload[0].dataKey}</StyledTooltip>\n        )\n    }\n}\n\nexport default ChartTooltip;\n","import styled from 'styled-components/macro';\nimport {colors, dark, breakpoints, effects, flex, fonts, light, textSizes} from '@styles/vars';\nimport theme from 'styled-theming';\n\nexport const ListItem = styled.li`\n  ${flex.col};\n  padding: 20px;\n  gap: 20px;\n  border-radius: 8px;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n  })};\n  transform-origin: center center;\n  will-change: transform;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  ${flex.between};\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark\n  })};\n  padding-bottom: 20px;\n  gap: 20px;\n`;\n\nexport const Main = styled.div`\n  ${flex.col};\n  gap: 20px;\n\n  .info {\n    ${flex.col};\n    gap: 10px;\n\n    .title {\n      font-weight: 500;\n    }\n\n    .timestamp {\n      font-size: ${textSizes['12']};\n      font-family: ${fonts.accent};\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    flex-direction: row;\n    ${flex.between};\n  }\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  border-radius: 20px;\n  background-color: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n  color: ${theme('theme', {\n    light: colors.blue,\n    dark: '#fff'\n  })};\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  padding: 0 25px;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n`;","// styled components\nimport {ListItem, Main, Header, Button} from '@components/TestItem/style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\nimport {motion, AnimatePresence} from 'framer-motion';\n\n// utils\nimport moment from 'moment';\nimport {fadePresence} from '@constants/framer';\n\nconst TestItem = ({data}) => {\n    const {doctor, title, date} = data;\n\n    return (\n        <AnimatePresence>\n            <ListItem as={motion.div} {...fadePresence}>\n                <Header>\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <MenuDots/>\n                </Header>\n                <Main>\n                    <div className=\"info\">\n                        <span className=\"title\">{title}</span>\n                        <span className=\"timestamp\">{moment(date).format('hh:mm A')}</span>\n                    </div>\n                    <Button>View result</Button>\n                </Main>\n            </ListItem>\n        </AnimatePresence>\n    )\n}\n\nexport default TestItem;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","import moment from 'moment';\n\nexport const patient_tests = [\n    {\n        id: 'LRmwlkTmRiv',\n        type: \"blood\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'EDkfK2u',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Adam Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: '97SbXo',\n        type: \"blood\",\n        date: moment().subtract(3, 'hour'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Hepatitis B surface antigen\"\n    },\n    {\n        id: 'RYXnQSf',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'VeOJuSBvq',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: 'aN6wcKSaUMgY',\n        type: \"mri\",\n        date: moment(),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'ukMuBJSL',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'wMch17',\n        type: \"ct\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'pkMHKe',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: '5EkV9OZ',\n        type: \"xray\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'vYMB5V564wE',\n        type: \"ecg\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'WdUbK4OW4Vn',\n        type: \"mri\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'kLYqsk',\n        type: \"mri\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'IftpHTw4p',\n        type: \"xray\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'oCnZPQKY',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: 'Y4RjFwyJn3y',\n        type: \"ct\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'JojvuH7',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'Si1B9W',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: '6zXfLNFdo',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'nPE75vNSE1Ya',\n        type: \"ecg\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'hEUJrTG',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'WCHC85b2on2',\n        type: \"ct\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: '0zVMPZO8s',\n        type: \"blood\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'g0ral9eA',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herbert Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: 'SyUtrFzCKe',\n        type: \"xray\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'NjQR8EIcGBR',\n        type: \"ultrasound\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n];","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","import styled from 'styled-components/macro';\nimport {colors, textSizes, flex, fonts, breakpoints} from '@styles/vars';\n\nexport const Card = styled.div`\n  background-color: ${props => colors[props.className]};\n  border-radius: 8px;\n  color: #fff;\n  font-size: ${textSizes['40']};\n  height: 80px;\n  ${flex.col};\n  ${flex.center};\n`;\n\nexport const Info = styled.div`\n  ${flex.col};\n  gap: 10px;\n\n  .value {\n    font-family: ${fonts.accent};\n    font-size: ${textSizes['40']};\n    font-weight: 300;\n    flex-grow: 1;\n  }\n`;\n\nexport const Content = styled.div`\n  padding-top: 24px;\n  ${flex.col};\n  gap: 20px;\n\n  ${breakpoints.mobileL} {\n    flex-direction: row;\n\n    ${Card} {\n      height: 134px;\n      width: 94px;\n    }\n\n    ${Info} {\n      width: calc(100% - 114px);\n\n      .h3 {\n        max-width: 200px;\n        flex-grow: unset;\n      }\n    }\n  }\n`;\n\n","// styled components\nimport {Card, Info, Content} from './style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport CountUp from 'react-countup';\n\nconst Statistics = ({data}) => {\n    const Icon = () => {\n        switch (data.type) {\n            default:\n            case 'cause':\n                return <i className=\"icon-stomach\"/>;\n            case 'teeth':\n                return <i className=\"icon-tooth\"/>;\n            case 'heart':\n                return <i className=\"icon-monitor\"/>;\n        }\n    }\n\n    const color = () => {\n        switch (data.type) {\n            default:\n            case 'cause':\n                return 'peach';\n            case 'teeth':\n                return 'teal';\n            case 'heart':\n                return 'green';\n        }\n    }\n\n    return (\n        <Widget name=\"Statistics\">\n            <WidgetBody>\n                <Content>\n                    <Card className={color()}>\n                        <Icon/>\n                    </Card>\n                    <Info>\n                        <CountUp className=\"value\" start={0} end={data.value} delay={0} duration={1} enableScrollSpy />\n                        <p className=\"h3\">{data.text}</p>\n                    </Info>\n                </Content>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default Statistics;","// styling\nimport styled from 'styled-components/macro';\nimport {flex} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport TestItem from '@components/TestItem';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// utils\nimport {getYearDaysArray} from '@utils/dates';\nimport moment from 'moment';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useEffect, useRef} from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport {patient_tests} from '@db/patient_tests';\n\nconst List = styled.div`\n  ${flex.col};\n  gap: 20px;\n`;\n\nconst RecentTests = () => {\n    const isXS = useWindowSize().width < 414;\n    const days = getYearDaysArray();\n    const todayIndex = moment().diff(moment().startOf('year'), 'days');\n    const {index, setIndex, navigate} = useArrayNav(days);\n\n    const headerRef = useRef(null);\n    const listRef = useRef(null);\n    const height = useContentHeight(headerRef);\n\n    useEffect(() => {\n        setIndex(todayIndex);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [todayIndex]);\n\n    useEffect(() => {\n        if (listRef.current) {\n            listRef.current.scrollTo(0, 0);\n        }\n    }, [index]);\n\n    const tests = patient_tests.filter((test) => {\n        const dayIndex = moment(test.date).diff(moment().startOf('year'), 'days');\n        return dayIndex === index;\n    })\n\n    return (\n        <Widget name=\"RecentTests\" mobile={600}>\n            <WidgetHeader title=\"Recent laboratory tests\" flex=\"column\" elRef={headerRef}>\n                <Navigator text={isXS ? days[index].short : days[index].long} handler={navigate} nextDisabled={index === todayIndex}/>\n            </WidgetHeader>\n            <WidgetBody>\n                <ScrollContainer height={height}>\n                    <List className=\"track\" ref={listRef}>\n                        {\n                            tests.length !== 0 ?\n                                tests.map((test) => <TestItem key={test.id} data={test}/>)\n                                :\n                                <NoDataPlaceholder/>\n                        }\n                    </List>\n                </ScrollContainer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default RecentTests;","// components\nimport Page from '@layout/Page';\nimport Statistics from '@widgets/Statistics';\nimport PaymentsHistory from '@widgets/PaymentsHistory';\nimport RecentTests from '@widgets/RecentTests';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\nimport { Grid } from '@mui/material';\nimport PatientCalendar from '@widgets/PatientCalendar';\nimport { useState,useEffect } from 'react';\nimport PatientsGenderLineChart from '@widgets/PatientsGenderLineChart';\nimport EventsCompactCalendar from '@widgets/EventsCompactCalendar';\nimport HealthIndexChart from '@widgets/HealthIndexChart';\nimport { GetAllOrdersData } from '@components/Api/AllApi';\n\nconst DashboardK = () => {\n\n    const [currentView, setView] = useState('day');\n    const [PatientSData,setPatientSData] = useState(false)\n    useEffect(() => {\n        const fetchTemplateData = async () => {\n            try {\n                const data = await GetAllOrdersData();\n                console.log(data, \"This Is all Patinet Data!\");\n                setPatientSData(data?.count);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchTemplateData();\n    }, []);\n\n    console.log(PatientSData)\n\n    let pageTitle = '';\n    switch (currentView) {\n        case 'week':\n            pageTitle = 'Available Appointments Time';\n            break;\n        case 'month':\n            pageTitle = 'Appointments Schedule';\n            break;\n        default:\n            pageTitle = 'Your appointments';\n            break;\n    }\n    return (\n        <>\n            <Sidebar />\n            <Panel />\n            <Page title=\" Provider Dashboard\">\n                <Grid container >\n                    \n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{margin:'4px'}} key=\"stat-cause\">\n                            <Statistics data={{ type: 'cause', value: PatientSData, text: 'Total Orders' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{margin:'4px'}} key=\"stat-teeth\">\n                            <Statistics data={{ type: 'teeth', value: '0', text: 'Unread Messages' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{margin:'4px'}} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: PatientSData, text: 'New Order Today' }} />\n                        </div>\n                    </Grid>\n                    \n\n                </Grid>\n                <Grid container>\n                    <Grid items md={3}>\n\n                        <div style={{margin:'4px'}} key=\"events-compact\">\n                            <EventsCompactCalendar />\n                        </div>\n                    </Grid>\n                    <Grid items md={9}>\n\n                        <div style={{margin:'4px'}} key=\"health-index\">\n                            <HealthIndexChart PatientSData={PatientSData} variant=\"both\" />\n                        </div>\n                    </Grid>\n                </Grid>\n\n                {/* <div key=\"payments-history\">\n                <PaymentsHistory variant=\"compact\"/>\n            </div>\n            <div key=\"recent-tests\">\n                <RecentTests/>\n            </div> */}\n            </Page>\n        </>\n\n    )\n}\n\nexport default DashboardK;","export function numFormatter(num) {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(1) + 'k';\n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(1) + 'm';\n    } else if (num < 900) {\n        return num;\n    }\n}\n\nexport function addZero(num) {\n    return num < 10 ? '0' + num : num;\n}","// styling\nimport {colors, flex, textSizes} from '@styles/vars';\nimport styled from 'styled-components/macro';\nimport {darken} from 'polished';\n\nconst Btn = styled.button`\n  min-width: 20px;\n  min-height: 20px;\n  padding: 2px;\n  border-radius: 50%;\n  background-color: ${colors.error};\n  color: #fff;\n  display: flex;\n  ${flex.center};\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  font-size: ${textSizes[12]};\n  line-height: 1;\n  will-change: transform;\n  z-index: 10;\n  transition: background-color var(--transition), transform var(--transition);\n\n  &:hover {\n    background-color: ${darken(0.1, colors.error)};\n    transform: scale(1.1);\n  }\n  \n  .icon {\n    margin-top: -1px;\n  }\n`;\n\nconst CloseBtn = ({handler}) => {\n    return (\n        <Btn onClick={handler}>\n            <i className=\"icon icon-close\"/>\n        </Btn>\n    )\n}\n\nexport default CloseBtn;","// styled components\nimport { EventsCalendar, Container, Popup, Backdrop } from '@widgets/EventsCompactCalendar/style';\n\n// components\nimport Widget from '@components/Widget';\nimport Calendar from 'react-calendar';\nimport Timestamp from '@ui/Timestamp';\nimport Grow from '@mui/material/Grow';\nimport CloseBtn from '@components/ModalWindow/CloseBtn';\n\n// hooks\nimport { useState, useRef } from 'react';\nimport './styleCal.css'\n// utils\nimport { nanoid } from 'nanoid';\nimport moment from 'moment';\nimport { Typography } from '@mui/material';\nimport { useEffect } from 'react';\nimport { GetAppointmtentREwie } from '@components/Api/AllApi';\n\nconst EventsCompactCalendar = () => {\n    const [selectedDate, setSelectedDate] = useState(moment());\n    const [popupVisible, setPopupVisible] = useState(false);\n    const popupRef = useRef(null);\n\n    const events = [\n        {\n            date: moment(),\n            title: 'Appointment Booked by Vipin Nagar',\n        },\n        {\n            date: moment(),\n            title: 'Appointment Booked by Tushar Nagar',\n        },\n        {\n            date: moment().add(3, 'hours'),\n            title: 'Appointment Booked by Raghu Yadav',\n        },\n        {\n            date: moment().add(2, 'days').add(1, 'hours'),\n            title: 'Appointment Booked by John',\n        },\n        {\n            date: moment().add(2, 'days').add(2, 'hours'),\n            title: 'Appointment Booked by  Boby',\n        }\n    ]\n\n\n\n\n\n    const hasEvents = date => events.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\n\n    const drawPopup = date => {\n        const eventsOnDate = events.filter(event => moment(event.date).isSame(date, 'day'));\n        return eventsOnDate.map(event => {\n            return (\n                <div key={nanoid(5)}>\n                    <Timestamp date={date} time={true} />\n                    <h3>{event.title}</h3>\n                </div>\n            )\n        });\n    }\n\n    const config = {\n        as: Calendar,\n        locale: 'en-US',\n        navigationLabel: ({ date }) => `${moment(date).format('MMMM, YYYY')}`,\n        navigationAriaLabel: 'Current month',\n        prevLabel: <i className=\"icon icon-chevron-left\" />,\n        nextLabel: <i className=\"icon icon-chevron-right\" />,\n        prev2Label: null,\n        next2Label: null,\n        nextAriaLabel: 'Next month',\n        prevAriaLabel: 'Previous month',\n        onClickDay: (value) => {\n            setSelectedDate(value);\n            setPopupVisible(true);\n        },\n        tileClassName: ({ date }) =>\n        moment(date).isSame(moment(), 'day') ? 'react-calendar__tile--now' : '',\n    }\n\n    return (\n        <Widget name=\"EventsCompactCalendar\">\n            <Container>\n                <Typography m={1} sx={{ fontSize: 22, fontWeight: 600 }}>Quick Calender</Typography>\n                <EventsCalendar {...config} />\n\n            </Container>\n        </Widget>\n    )\n}\n\nexport default EventsCompactCalendar;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n      background-color:green;\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, breakpoints, flex} from '@styles/vars';\n\nexport const HealthIndexChartWrapper = styled.div`\n  height: 100%;\n  ${flex.col};\n  justify-content: space-between;\n\n  .total {\n    display: flex;\n    gap: 40px;\n    margin: -4px 24px 0;\n    position: relative;\n\n    &_block {\n      font-size: ${textSizes['12']};\n\n      .counter {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      .spacer {\n        opacity: 0;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      &--cured .h1 {\n        color: ${colors.azure};\n      }\n\n      &--sick {\n        position: relative;\n\n        .h1 {\n          color: ${colors.peach};\n        }\n\n        &:before {\n          content: '';\n          height: 100%;\n          width: 1px;\n          background: ${theme('theme', {\n            light: '#A2C0D4',\n            dark: '#383D40',\n          })};\n          position: absolute;\n          top: 0;\n          left: -20px;\n        }\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .total_block {\n        font-size: ${textSizes['14']};\n\n        .hidden {\n          display: inline;\n        }\n      }\n    }\n\n    ${breakpoints.laptop} {\n      .total_block {\n        font-size: ${textSizes['16']};\n      }\n    }\n  }\n`;","export const y2020 = [\n    {cured: 314, sick: 200},\n    {cured: 200, sick: 400},\n    {cured: 265, sick: 120},\n    {cured: 156, sick: 300},\n    {cured: 412, sick: 200},\n    {cured: 280, sick: 500},\n    {cured: 251, sick: 130},\n    {cured: 180, sick: 300},\n    {cured: 304, sick: 150},\n    {cured: 505, sick: 408},\n    {cured: 328, sick: 200},\n    {cured: 254, sick: 90},\n    {cured: 301, sick: 566},\n    {cured: 459, sick: 189},\n    {cured: 354, sick: 480},\n    {cured: 264, sick: 400},\n    {cured: 309, sick: 200},\n    {cured: 185, sick: 500},\n];\n\nexport const y2021 = [\n    {cured: 450, sick: 250},\n    {cured: 150, sick: 380},\n    {cured: 370, sick: 200},\n    {cured: 300, sick: 180},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 600},\n    {cured: 200, sick: 300},\n    {cured: 400, sick: 150},\n    {cured: 348, sick: 130},\n    {cured: 400, sick: 280},\n    {cured: 200, sick: 400},\n    {cured: 300, sick: 241},\n    {cured: 380, sick: 480},\n    {cured: 200, sick: 380},\n    {cured: 400, sick: 200},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 300},\n    {cured: 300, sick: 450},\n];\n\nexport const y2022 = [\n    {cured: 200, sick: 300},\n    {cured: 250, sick: 350},\n    {cured: 390, sick: 240},\n    {cured: 450, sick: 320},\n    {cured: 550, sick: 250},\n    {cured: 420, sick: 200},\n    {cured: 368, sick: 198},\n    {cured: 250, sick: 370},\n    {cured: 322, sick: 200},\n    {cured: 450, sick: 270},\n    {cured: 210, sick: 394},\n    {cured: 180, sick: 270},\n    {cured: 380, sick: 480},\n    {cured: 390, sick: 550},\n    {cured: 450, sick: 210},\n    {cured: 470, sick: 360},\n    {cured: 360, sick: 190},\n    {cured: 300, sick: 250},\n];\n","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport {HealthIndexChartWrapper} from '@widgets/HealthIndexChart/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport ChartTooltip from '@components/Chart/Tooltip';\nimport CountUp from 'react-countup';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport {useTheme} from 'styled-components';\n\n// data placeholder\nimport {y2020, y2021, y2022} from '@db/health';\n\nconst HealthIndexChart = ({variant,PatientSData}) => {\n    const {theme} = useTheme();\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    const averages = [\n        {cured: 75.08, sick: 45.27},\n        {cured: 84.51, sick: 33.12},\n        {cured: 67.14, sick: 48.65},\n    ]\n\n    const getCurrentData = () => {\n        switch (index) {\n            default:\n            case 0:\n                return y2020;\n            case 1:\n                return y2021;\n            case 2:\n                return y2022;\n        }\n    }\n    const data = getCurrentData();\n\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\n\n        return (\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                {\n                    isDominant &&\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\n                          strokeLinecap=\"round\"/>\n                }\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\n                      fill={fill}/>\n                <defs>\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.azure}/>\n                    </linearGradient>\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.peach}/>\n                    </linearGradient>\n                </defs>\n            </svg>\n        );\n    }\n\n    return (\n        <Widget name=\"HealthIndexChart\">\n            <WidgetNav sx={{fontSize:22,fontWeight:600}} title=\"Provider Growth\" handler={navigate}/>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <HealthIndexChartWrapper>\n                    <div className=\"total\">\n                        <div className=\"total_block total_block--cured\">\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\n                            <CountUp className=\"counter h1\" end={PatientSData} duration={2}  />\n                            <span><span className=\"hidden\">Total</span> Orders</span>\n                        </div>\n                        \n                    </div>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                        <ScatterChart margin={false} data={data}>\n                            {\n                                variant === 'both' &&\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\n                                    {data.map((entry, i) => {\n                                        return (\n                                            <Cell key={`cell-${i}`}\n                                                  fill={colors.peach}\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\n                                                  dataKey=\"sick\"/>\n                                        )\n                                    })}\n                                </Scatter>\n                            }\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\n                                {data.map((entry, i) => {\n                                    return (\n                                        <Cell key={`cell-${i}`}\n                                              fill={colors.azure}\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\n                                              dataKey=\"cured\"/>\n                                    )\n                                })}\n                            </Scatter>\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                    \n                </HealthIndexChartWrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nHealthIndexChart.propTypes = {\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\n}\n\nexport default HealthIndexChart;","export const y2019 = [\n    {\n        name: 'January',\n        men: 220,\n        women: 350\n    },\n    {\n        name: 'February',\n        men: 185,\n        women: 214\n    },\n    {\n        name: 'March',\n        men: 294,\n        women: 305\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 214\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 288,\n        women: 265\n    },\n    {\n        name: 'July',\n        men: 355,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 218,\n        women: 301\n    },\n    {\n        name: 'September',\n        men: 180,\n        women: 250\n    },\n    {\n        name: 'October',\n        men: 274,\n        women: 145\n    },\n    {\n        name: 'November',\n        men: 387,\n        women: 218\n    },\n    {\n        name: 'December',\n        men: 281,\n        women: 311\n    },\n];\n\nexport const y2020 = [\n    {\n        name: 'January',\n        men: 311,\n        women: 205\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 288\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 511,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 300,\n        women: 220\n    },\n];\n\nexport const y2021 = [\n    {\n        name: 'January',\n        men: 566,\n        women: 309\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 500,\n        women: 600\n    },\n];\n\nexport const y2022 = [\n    {\n        name: 'January',\n        men: 303,\n        women: 260\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 400,\n        women: 350\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 202,\n        women: 140\n    },\n    {\n        name: 'December',\n        men: 70,\n        women: 140\n    },\n];","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport CartesianChart from '@components/CartesianChart';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components'\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport moment from 'moment';\nimport {getMonthArray} from '@utils/dates';\n\n// data placeholder\nimport {y2019, y2020, y2021, y2022} from '@db/gender';\nimport {rgba} from 'polished';\n\nconst PatientsGenderLineChart = () => {\n    const isMobile = useWindowSize().width < 768;\n    const {theme} = useTheme();\n    const periods = ['2019', '2020', '2021', '2022'];\n    const {index, navigate} = useArrayNav(periods);\n\n    // common line props\n    const common = {\n        type:\"monotone\",\n        strokeWidth: 3,\n        dot: false\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: \"men\",\n            stroke: colors.azure,\n            activeDot: {r: 4, fill: colors.azure, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.azure, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: \"women\",\n            stroke: colors.peach,\n            activeDot: {r: 4, fill: colors.peach, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.peach, .5)})`\n            }\n        }\n    ];\n\n    const currentData = () => {\n        switch (periods[index]) {\n            case '2019':\n                return y2019\n            case '2020':\n                return y2020\n            case '2021':\n                return y2021\n            default:\n            case '2022':\n                return y2022\n        }\n    }\n\n    const data = currentData();\n\n    return (\n        <Widget name=\"PatientsGenderLineChart\" mobile={400}>\n            <WidgetHeader title=\"Patients gender\" flex=\"column\">\n                <Navigator handler={navigate} text={periods[index]} style={{margin: '0 -22px 0'}} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <Labels>\n                    {\n                        getMonthArray().map(({month}) => (\n                            <div key={moment(month).format('MMM')}>\n                                {isMobile ? moment(month).month() + 1 : moment(month).format('MMM')}\n                            </div>\n                        ))\n                    }\n                </Labels>\n                <CartesianChart variant=\"line\" id=\"patientsGender\" data={data} elems={chartElems} />\n                <LegendList overlay={true}>\n                    <LegendItem color=\"azure\" legend=\"men\" />\n                    <LegendItem color=\"peach\" legend=\"women\" />\n                </LegendList>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsGenderLineChart;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, effects, flex, fonts, textSizes} from '@styles/vars';\n\nexport const ListItem = styled.div`\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark,\n})};\n  padding-bottom: 20px;\n\n  &:not(.bordered):last-of-type {\n    border-bottom: none;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  ${flex.between};\n  margin-bottom: 12px;\n  gap: 20px;\n\n  .main {\n    ${flex.col};\n    gap: 8px;\n\n    .title {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      font-weight: 500;\n    }\n  }\n\n  .payment {\n    align-self: flex-end;\n    font-family: ${fonts.accent};\n    font-weight: 500;\n    display: flex;\n    gap: 8px;\n    font-size: ${textSizes['14']};\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  ${flex.between};\n`;\n\nexport const Date = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  .date {\n    font-size: ${textSizes['14']};\n  }\n\n  .icon {\n    color: ${colors.gray};\n  }\n`;","// styled components\nimport {ListItem, Wrapper, Footer, Date} from './style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\n\n// utils\nimport moment from 'moment';\n\nconst PaymentItem = ({data, className}) => {\n    const {doctor, title, payment, date} = data;\n    const formattedDate = moment(date).format('dddd, DD MMMM');\n    return (\n        <ListItem className={`list-item ${className ? className : ''}`}>\n            <Wrapper>\n                <div className=\"main\">\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <span className=\"title\">{title}</span>\n                </div>\n                <span className=\"payment\">\n                    <span className=\"icon\">€</span> {payment.toFixed(2)}\n                </span>\n            </Wrapper>\n            <Footer>\n                <Date>\n                    <i className=\"icon icon-clock\"/>\n                    <span className=\"date\">{formattedDate}</span>\n                </Date>\n                <MenuDots/>\n            </Footer>\n        </ListItem>\n    )\n}\n\nexport default PaymentItem;","const dayBefore = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\nconst twoDaysBefore = new Date(new Date().getTime() - 2 * 24 * 60 * 60 * 1000);\n\nexport const paymentsHistory = [\n    {\n        doctor: 'John Doe',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'MRI',\n        payment: 99.30,\n        date: new Date()\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'USG + Consultation',\n        payment: 35,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Keeney Test',\n        payment: 150.95,\n        date: new Date()\n    },\n    {\n        doctor: 'Robert Miller',\n        title: 'Family Planning',\n        payment: 540,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'X-Ray',\n        payment: 70,\n        date: dayBefore\n    },\n    {\n        doctor: 'Samantha Berry',\n        title: 'Psychotherapy',\n        payment: 200,\n        date: dayBefore\n    },\n    {\n        doctor: 'Samantha Berry',\n        title: 'Art therapy session',\n        payment: 80.50,\n        date: dayBefore\n    },\n    {\n        doctor: 'Lucas Bell',\n        title: 'Gastroscopy',\n        payment: 50.90,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'Consultation',\n        payment: 15,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Kimbra Lee',\n        title: 'Vision Test',\n        payment: 20.90,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Kimbra Lee',\n        title: 'Glaucoma Test',\n        payment: 90.95,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Robert Miller',\n        title: 'Family Planning',\n        payment: 450.87,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'John Doe',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: twoDaysBefore\n    },\n]","// styling\nimport styled from 'styled-components/macro';\nimport {flex, breakpoints} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport PaymentItem from '@components/PaymentItem';\nimport Navigator from '@ui/Navigator';\nimport ScrollContainer from '@components/ScrollContainer';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport {getYearDaysArray} from '@utils/dates';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useEffect, useRef} from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport {paymentsHistory} from '@db/payments_history';\n\nconst Container = styled.div`\n  .list {\n    ${flex.col};\n    gap: 20px 24px;\n    padding: 20px 24px;\n\n    .column {\n      ${flex.col};\n      gap: 20px;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .list {\n      ${props => props.variant === 'large' && `\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n      `}\n    }\n  }\n`;\n\nconst PaymentsHistory = ({variant}) => {\n    const days = getYearDaysArray();\n    const todayIndex = moment().diff(moment().startOf('year'), 'days');\n    const {index, setIndex, navigate} = useArrayNav(days);\n    const paymentsByDate = paymentsHistory.filter(payment => moment(payment.date).isSame(days[index].date, 'day'));\n    const payments = variant === 'large' ? paymentsByDate : paymentsHistory;\n    const isTablet = useWindowSize().width >= 768;\n\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n\n    useEffect(() => {\n        setIndex(todayIndex);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [todayIndex]);\n\n    return (\n        <Widget name=\"PaymentsHistory\" mobile={600}>\n            {variant === 'compact' &&\n                <WidgetHeader title=\"Payments history\" elRef={headerRef} style={{paddingBottom: 0}}/>\n            }\n            <WidgetBody style={{padding: 0}}>\n                <ScrollContainer height={height}>\n                    <Container className=\"track\" variant={variant}>\n                        {\n                            payments.length !== 0 ?\n                                <div className=\"list\">\n                                    {\n                                        payments.map((payment, i) => (\n                                            i % 3 === 0 &&\n                                            <div className=\"column\" key={nanoid()}>\n                                                {\n                                                    payments.slice(i, i + 3).map(payment => (\n                                                        <PaymentItem data={payment}\n                                                                     key={nanoid()}\n                                                                     className={isTablet && variant === 'large'}/>\n                                                    ))\n                                                }\n                                            </div>\n                                        ))\n                                    }\n                                </div> : <NoDataPlaceholder/>\n                        }\n                    </Container>\n                </ScrollContainer>\n                {\n                    variant === 'large' &&\n                    <div ref={footerRef} style={{padding: '0 2px 2px'}}>\n                        <Navigator text={days[index].long} handler={e => navigate(e)}\n                                   nextDisabled={index === todayIndex}/>\n                    </div>\n                }\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nPaymentsHistory.propTypes = {\n    variant: PropTypes.oneOf(['compact', 'large']).isRequired\n}\n\nexport default PaymentsHistory;"],"names":["Link","styled","a","withConfig","componentId","textSizes","colors","blue","darken","gray","_ref","_ref$href","href","title","_jsxs","children","_jsx","className","props","step","day","isRender","differenceMs","moment","value","isCurrentTimeSlot","hours","Date","getHours","minutes","getMinutes","currentTime","addZero","timeIndicator","style","top","concat","indicatorPosition","minutesFromProps","Math","abs","calculateIndicatorPosition","cloneElement","_objectSpread","format","label","_Fragment","date","setter","calendarWeek","week","currentWeek","firstWeek","startOf","lastWeek","endOf","Navigator","handler","e","currentTarget","dataset","direction","subtract","toDate","add","text","prevDisabled","nextDisabled","options","getWeekArray","map","item","i","startLong","endLong","_useState","useState","_useState2","_slicedToArray","selected","setSelected","CustomSelect","variant","changeHandler","calendarMonth","month","currentMonth","getMonthArray","formatted","set","disabled","start","hour","minute","second","end","type","events","doctor","name","allDay","patient","general","viewChangeHandler","current","width","useWindowSize","localizer","momentLocalizer","footerRef","useRef","headerRef","height","setHeight","useEffect","offsetHeight","doctorsOptions","_useState3","_useState4","selectedDoctor","_useState5","_useState6","popupOpen","setPopupOpen","_useState7","_useState8","setPost","AppShed","GetAppointmtentREwie","then","data","console","log","result","_useState9","_useState10","currentDate","setCurrentDate","views","Navigation","Tabs","view","Item","Button","onClick","handleNavigation","action","config","as","Calendar","startAccessor","endAccessor","onView","onNavigate","onDrillDown","handleDayClick","backgroundEvents","min","max","timeslots","formats","dayHeaderFormat","dayFormat","getDayFormat","timeGutterFormat","components","toolbar","_ref2","Header","ref","DailyToolbar","DailyNavigation","WeekSelector","WeeklyNavigation","MonthSelector","MonthlyNavigation","event","_ref3","Event","timeSlotWrapper","TimeSlot","messages","showMore","total","popup","selectable","onSelectSlot","Container","StyledCalendar","DoctorPopup","elemsHeight","open","Footer","Legend","colorTypes","_ref4","cat","color","LegendItem","legend","id","elems","_objectWithoutProperties","_excluded","theme","useTheme","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","index","background","stroke","ResponsiveContainer","LineChart","margin","x1","y1","x2","y2","gradientUnits","stopColor","dark","stopOpacity","offset","light_gray","CartesianGrid","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","Area","Labels","div","flex","between","fonts","accent","light","center","arrow","tooltip","_ref$arrow","_ref$multi","multi","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","right","ListItem","li","col","highlight","effects","dashedLight","dashedDark","Main","breakpoints","tablet","button","widgetBg","AnimatePresence","motion","fadePresence","IconLink","MenuDots","sidePadding","WidgetHeader","Nav","tasksOptions","depsOptions","testsOptions","doctors","forEach","Avatar","avatar","alt","size","patient_tests","periods","period","setPeriod","setPeriodIndex","Card","Info","Content","mobileL","Icon","Widget","WidgetBody","CountUp","delay","duration","enableScrollSpy","currentView","PatientSData","setPatientSData","fetchTemplateData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","GetAllOrdersData","sent","count","t0","error","stop","apply","Sidebar","Panel","Page","Grid","container","items","xs","sm","md","Statistics","EventsCompactCalendar","HealthIndexChart","numFormatter","num","toFixed","setSelectedDate","setPopupVisible","locale","navigationLabel","navigationAriaLabel","prevLabel","nextLabel","prev2Label","next2Label","nextAriaLabel","prevAriaLabel","onClickDay","tileClassName","isSame","Typography","m","sx","fontSize","fontWeight","EventsCalendar","bodyBg","HealthIndexChartWrapper","azure","peach","laptop","y2020","cured","sick","y2021","y2022","usePeriodNav","_useArrayNav","useArrayNav","navigate","getCurrentData","CustomScatterShape","cx","cy","fill","isDominant","dom","viewBox","x","y","xmlns","opacity","d","strokeWidth","fillRule","clipRule","WidgetNav","padding","overflow","ScatterChart","Scatter","shape","entry","Cell","ChartTooltip","y2019","men","women","isMobile","common","dot","chartElems","activeDot","r","filter","rgba","currentData","mobile","CartesianChart","LegendList","overlay","Wrapper","payment","formattedDate","dayBefore","getTime","twoDaysBefore","paymentsHistory","days","getYearDaysArray","todayIndex","diff","setIndex","paymentsByDate","payments","useContentHeight","elRef","paddingBottom","ScrollContainer","slice","PaymentItem","nanoid","NoDataPlaceholder","long"],"sourceRoot":""}